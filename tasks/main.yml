- name: "Query MDM Cluster to get Ids"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/instances/System/queryMdmCluster"
    return_content: yes
    method: POST
    body: {}
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
      - 428
  register: master_output
  run_once: True
  tags:
    - create_cluster

- debug:
    var: master_output
  tags:
    - [ never, debug ]

- name: "Find MDM Private Ip's"
  set_fact:
    mdm_private_ip: "{{ ansible_facts['all_ipv4_addresses'] | \
    ipaddr( vxflex_mdm_cidr ) }}"
  tags:
    - create_cluster

- name: "Find MDM Public Ip's"
  set_fact:
    mdm_public_ip: "{{ ansible_facts['all_ipv4_addresses'] | \
    ipaddr( vxflex_mdm_public_cidr ) }}"
  tags:
    - create_cluster

- debug:
    var: mdm_private_ip
  tags:
    - [ never, debug ]

- debug:
    var: mdm_public_ip
  tags:
    - [ never, debug ]

- name: "Add MDM Master"
  shell: 'scli --create_mdm_cluster \
  --master_mdm_ip {{ mdm_private_ip | join(",") }} \
  --master_mdm_management_ip {{ mdm_public_ip | join(",") }} \
  --master_mdm_name {{ ansible_facts["nodename"] }} \
  --cluster_virtual_ip {{ vxflex_vip_ip }} \
  --master_mdm_virtual_ip_interface {{ ansible_default_ipv4.interface }} \
  --accept_license \
  --approve_certificate'
  register: results
  when:
    - "master_output.status == 428"
    - "'master' in group_names"
  tags:
    - create_cluster

- name: "Get ScaleIO token for Auth"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/login"
    return_content: yes
    user: "{{ vxflex_gateway_username }}"
    password: "{{ vxflex_gateway_pw }}"
    force_basic_auth: yes
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  register: msg
  run_once: True
  tags:
    - create_cluster

- name: "Add Standby MDM to cluster"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/instances/System/action/addStandbyMdm"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ msg.json }}"
    body: {"ips": "{{ mdm_private_ip }}",
    "managementIps":"{{ mdm_public_ip }}",
    "virtIpIntfs":["{{ ansible_default_ipv4.interface }}"],
    "name":"{{ ansible_facts['nodename'] }}",
    "role":"Manager"}
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
      - 500
  register: add_standby
  when:
    - "'standby' in group_names"
    - "master_output.status == 428"
    - "master_output.json.standbyMDMs is not defined"
  changed_when: add_standby.status == 200
  tags:
    - create_cluster

- name: "Display standby add results"
  debug:
    var: add_standby
  tags:
    - debug

- name: "Print out list of mdm IP addresses"
  debug:
    var: vxflex_standby_mdm_ip
  tags:
    - debug

- name: "Add TieBreaker MDM to cluster"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/instances/System/action/addStandbyMdm"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ msg.json }}"
    body: {"ips":"{{ mdm_private_ip }}",
    "managementIps":"{{ mdm_public_ip }}",
    "name":"{{ ansible_facts['nodename'] }}",
    "role":"TieBreaker"}
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
      - 446
      - 500
  register: tiebreaker_results
  when:
    - "'tiebreaker' in group_names"
  changed_when: tiebreaker_results.status == 200
  tags:
    - create_cluster

- name: "Print out adding tiebreaker results"
  debug:
    var: tiebreaker_results
  tags:
    - [ never, debug ]

- name: "MDM Cluster creation results"
  debug:
    var: results
  tags:
    - [ never, debug ]


- name: "Query MDM Cluster to get Ids"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/instances/System/queryMdmCluster"
    return_content: yes
    method: POST
    body: {}
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  register: output
  run_once: True
  when:
    - "master_output.status == 200"
    - "master_output.json.clusterMode == 'OneNode'"
  tags:
    - create_cluster

- name: "MDM Cluster Ids output"
  debug:
    var: output
  tags:
    - [ never, debug ]

- name: "Change to 3 node cluster"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/instances/System/action/switchClusterMode"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ msg.json }}"
    body: {"mode":"ThreeNodes",
    "addSlaveMdmIdList":["{{ output.json.standbyMDMs[0].id }}"],
    "addTBIdList":["{{ output.json.standbyMDMs[1].id }}"]}
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  run_once: True
  register: cluster_output
  changed_when: "cluster_output.status == 200"
  when:
    - "master_output.status == 200"
    - "master_output.json.clusterMode == 'OneNode'"
  tags:
    - create_cluster
